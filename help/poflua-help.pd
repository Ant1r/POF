#N canvas 877 169 1042 858 12;
#X declare -lib pof;
#X declare -path lua;
#X obj 229 194 pofhead;
#X obj 229 260 poftranslate;
#X floatatom 329 147 5 0 0 0 - - -;
#X obj 387 280 pofrect 400 400;
#X obj 387 256 pofcolor 0.3 0.3 0.3 1;
#X obj 190 273 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 383 146 5 0 0 0 - - -;
#X floatatom 467 213 0 0 0 0 - - -;
#X obj 467 125 cputime;
#X obj 467 5 loadbang;
#X obj 467 69 metro 1000;
#X obj 467 97 t b b;
#X obj 467 185 * 0.1;
#X obj 467 154 int;
#X text 490 35 <= on/off;
#X obj 467 36 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 257 103 pofwin;
#X msg 257 63 framerate 60;
#X msg 214 13 framerate 25;
#X obj 26 339 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 96 295 5 0 0 0 - - -;
#X obj 567 13 pofhead;
#X obj 567 37 pofbang 1;
#X obj 627 60 t b b, f 8;
#X msg 627 108 1000 \$1;
#X obj 627 132 /;
#X msg 237 38 framerate 50;
#X obj 627 180 +;
#X floatatom 609 225 5 0 0 0 - - -;
#X obj 627 156 * 0.05;
#X obj 660 179 * 0.95;
#X obj 609 203 f;
#X obj 14 12 declare -lib pof;
#X obj 229 289 pofvisible;
#X obj 65 326 poftranslate 0 0;
#X obj 627 84 realtime;
#X obj 603 549 poflua screen \; M.W=1024 \; M.H=768 \; M.wh=200;
#X floatatom 544 465 5 0 0 0 - - -;
#X msg 537 492 lua screen.wh = \$1;
#X obj 346 552 s truc1_\$0;
#X floatatom 352 505 5 0 0 0 - - -;
#X msg 346 527 lua M.count=\$1;
#X floatatom 294 658 8 0 0 0 - - -;
#X msg 94 409 draw \$1;
#X obj 94 386 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 65 350 pofvisible 0;
#X obj 294 633 route loops touch;
#X obj 373 664 print touch;
#N canvas 717 219 1192 784 test_slider 0;
#X obj 360 46 pofhead;
#X obj 360 109 pofvisible;
#X obj 312 90 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 830 697 5 0 0 0 - - -;
#X obj 360 214 poftranslate;
#X floatatom 386 188 5 0 0 0 - - -;
#X floatatom 440 187 5 0 0 0 - - -;
#X obj 562 36 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X msg 574 75 lua M.v=\$1;
#X obj 811 742 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 591 133 hsl 128 15 20 100 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X msg 587 156 lua M.w=\$1;
#X msg 46 44 lua of.drawRectangle(0\\\,0\\\,1000\\\,1000);
#X obj 328 255 pofonce;
#X obj 294 229 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 360 77 t a a, f 15;
#X obj 183 232 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 183 296 continuousForce \$1;
#X obj 360 161 pofcolor 1 1 1 1;
#X obj 419 140 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 219 138 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 315 188 t a a;
#X obj 138 386 poftranslate 200;
#X obj 138 410 pofcirc 50;
#X obj 359 309 poflua sliderVertA \; M.w=50 \; M.h=200 \; M.v=0 \;
local border = 4 \; local knobW = 20 \; local rad = 10 \; local function
clip(x \, min \, max) \; if(x < min) then return min \; elseif(x >max)
then return max \; else return x \; end \; end \; local function adjColor(r
\, g \, b \, a) \; local style = of.getStyle().color \; of.setColor(style.r*r
\, style.g*g \, style.b*b \, style.a*a) \; end \; function M:touch(event
\, x \, y \, id) \; if(event=="down") then M.y0=y \; M.v0=M.v \; elseif(event=="move")
then M.v = clip(M.v0 - (y-M.y0)/(M.h-border-knobW) \, 0 \, 1) \; M.out(M.v)
\; end \; end \; function M.draw() \; adjColor(1 \, 1 \, 1 \, 1) \;
of.drawRectRounded(-M.w/2 \, -M.h/2 \, M.w \, M.h \, rad) \; adjColor(0
\, 0 \, 0 \, 1) \; of.drawRectRounded((-M.w + border)/2 \, (-M.h+border)/2
+ (M.h-knobW-border)*(1-M.v) \, M.w - border \, knobW \, rad) \; end
\;;
#X connect 0 0 15 0;
#X connect 1 0 18 0;
#X connect 2 0 1 0;
#X connect 4 0 24 0;
#X connect 5 0 4 1;
#X connect 6 0 4 2;
#X connect 7 0 8 0;
#X connect 8 0 24 0;
#X connect 10 0 11 0;
#X connect 11 0 24 0;
#X connect 12 0 24 0;
#X connect 14 0 13 0;
#X connect 15 0 1 0;
#X connect 16 0 17 0;
#X connect 17 0 13 0;
#X connect 18 0 21 0;
#X connect 19 0 18 4;
#X connect 20 0 18 2;
#X connect 20 0 18 3;
#X connect 21 0 22 0;
#X connect 21 1 4 0;
#X connect 22 0 23 0;
#X connect 24 1 3 0;
#X connect 24 1 9 0;
#X restore 84 680 pd test_slider;
#N canvas 828 156 1018 813 test_slider_class 0;
#X floatatom 930 782 5 0 0 0 - - -;
#X obj 492 256 poflua sliderVdef \; sliderV = class() \; M = sliderV
\; function M:__init() \; self.w=50 \; self.h=200 \; self.v=0 \; end
\; local border = 20 \; local knobW = 20 \; local rad = 10 \; local
function clip(x \, min \, max) \; if(x < min) then return min \; elseif(x
>max) then return max \; else return x \; end \; end \; local function
adjColor(r \, g \, b \, a) \; local style = of.getStyle().color \;
of.setColor(style.r*r \, style.g*g \, style.b*b \, style.a*a) \; end
\; function M:touch(event \, x \, y \, id) \; if(event == "down") then
self.y0 = y \; self.v0 = self.v \; elseif(event == "move") then self.v
= clip(self.v0 - (y - self.y0) / (self.h - border-knobW) \, 0 \, 1)
\; self.out(M.v) \; end \; end \; function M:draw() \; adjColor(1 \,
1 \, 1 \, 1) \; of.drawRectRounded(-self.w/2 \, -self.h/2 \, self.w
\, self.h \, rad) \; adjColor(0 \, 0 \, 0 \, 1) \; of.drawRectRounded((-self.w
+ border)/2 \, (-self.h+border)/2 + (self.h-knobW-border)*(1-self.v)
\, self.w - border \, knobW \, rad) \; end \;, f 70;
#X obj 63 298 pofhead;
#X obj 63 361 pofvisible;
#X obj 35 331 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 63 329 t a a, f 15;
#X floatatom 426 574 5 0 0 0 - - -;
#X obj 63 393 poflua slider1 \; M.s = sliderV() \; M.s.w = 200 \; local
border = 10 \; function M.draw() M.s.draw(M.s) \; end \; M.s.out =
M.out \; function M:touch(event \, x \, y \, id) M.s.touch(M.s \, event
\, x \, y \, id) end \;;
#X connect 1 1 0 0;
#X connect 2 0 5 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 5 1 1 0;
#X connect 7 1 6 0;
#X restore 85 726 pd test_slider_class;
#X obj 91 98 tgl 50 0 empty empty empty 17 7 0 10 -258113 -1 -1 0 1
;
#X obj 71 175 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#N canvas 808 139 1018 813 test_slider_class2 0;
#X floatatom 823 713 5 0 0 0 - - -;
#X obj 63 298 pofhead;
#X obj 63 361 pofvisible;
#X obj 35 331 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 63 329 t a a, f 15;
#X floatatom 193 469 5 0 0 0 - - -;
#X msg 227 251 lua M.v=\$1;
#X obj 199 206 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X msg 220 321 lua M.out(8);
#X obj 63 390 poflua \; sliderV2.format(M) \; M.w = 200 \; M.out(2)
;
#X obj 384 157 poflua sliderV2 \; local border = 5 \; local knobW =
20 \; local rad = 10 \; local function clip(x \, min \, max) \; if(x
< min) then return min \; elseif(x >max) then return max \; else return
x \; end \; end \; local function adjColor(r \, g \, b \, a) \; local
style = of.getStyle().color \; of.setColor(style.r*r \, style.g*g \,
style.b*b \, style.a*a) \; end \; function M:dotouch(event \, x \,
y \, id) \; if(event == "down") then self.y0 = y \; self.v0 = self.v
\; elseif(event == "move") then self.v = clip(self.v0 - (y - self.y0)
/ (self.h - border-knobW) \, 0 \, 1) \; self.out(self.v) \; end \;
end \; function M:dodraw() \; adjColor(1 \, 1 \, 1 \, 1) \; of.drawRectRounded(-self.w/2
\, -self.h/2 \, self.w \, self.h \, rad) \; adjColor(0 \, 0 \, 0 \,
1) \; of.drawRectRounded((-self.w + border)/2 \, (-self.h+border)/2
+ (self.h-knobW-border)*(1-self.v) \, self.w - border \, knobW \, rad)
\; end \; function M:format() \; self.w=50 \; self.h=200 \; self.v=0
\; function self.draw() M.dodraw(self) end \; function self:touch(event
\, x \, y \, id) M.dotouch(self \, event \, x \, y \, id) end \; end
\;, f 75;
#X connect 1 0 4 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 4 1 10 0;
#X connect 6 0 9 0;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 9 1 5 0;
#X connect 10 1 0 0;
#X restore 83 757 pd test_slider_class2;
#N canvas 877 143 1018 813 test_slider_class3 0;
#X msg 515 75 lua M.border=\$1;
#X floatatom 515 42 5 0 0 0 - - -;
#X obj 63 298 pofhead;
#X obj 35 331 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 63 329 t a a, f 15;
#X floatatom 193 521 5 0 0 0 - - -;
#X msg 227 251 lua M.v=\$1;
#X obj 217 199 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 55 172 hsl 128 15 10 200 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X msg 124 228 lua M.w=\$1;
#X msg 215 298 lua sliderV3.format(M);
#X msg 210 342 lua M.draw=sliderV3.draw;
#X obj 172 604 pofonce;
#X obj 316 65 pofvisible;
#X obj 324 39 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 398 158 poflua sliderV3 \; M.border = 20 \; local knobW = 20
\; local rad = 10 \; local function clip(x \, min \, max) \; if(x <
min) then return min \; elseif(x >max) then return max \; else return
x \; end \; end \; local function adjColor(r \, g \, b \, a) \; local
style = of.getStyle().color \; of.setColor(style.r*r \, style.g*g \,
style.b*b \, style.a*a) \; end \; function M:dotouch(event \, x \,
y \, id) \; if(event == "down") then self.y0 = y \; self.v0 = self.v
\; elseif(event == "move") then self.v = clip(self.v0 - (y - self.y0)
/ (self.h - M.border - knobW) \, 0 \, 1) \; self.out(self.v) \; end
\; end \; function M:dodraw() \; adjColor(1 \, 1 \, 1 \, 1) \; of.drawRectRounded(-self.w/2
\, -self.h/2 \, self.w \, self.h \, rad) \; adjColor(0 \, 0 \, 0 \,
1) \; of.drawRectRounded((-self.w + M.border)/2 \, (-self.h + M.border)/2
+ (self.h-knobW - M.border)*(1-self.v) \, self.w - M.border \, knobW
\, rad) \; end \; function M:format() \; self.w=50 \; self.h=200 \;
self.v=0 \; self.draw = M.dodraw \; self.touch = M.dotouch \; end \;
, f 75;
#X obj 63 441 poflua slider3 \; sliderV3.format(M);
#X obj 63 401 poftranslate;
#X floatatom 179 398 5 0 0 0 - - -;
#X obj 63 361 pofvisible 0;
#X connect 0 0 15 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 3 0 19 0;
#X connect 4 0 19 0;
#X connect 4 1 15 0;
#X connect 6 0 16 0;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 9 0 16 0;
#X connect 10 0 16 0;
#X connect 11 0 16 0;
#X connect 14 0 13 0;
#X connect 16 1 5 0;
#X connect 17 0 16 0;
#X connect 18 0 17 1;
#X connect 19 0 17 0;
#X restore 82 784 pd test_slider_class3;
#X obj 336 318 poflua draw1 \; function M.dodraw() \; local wh=screen.wh
\; of.setColor(of.random(0 \, 255) \, of.random(0 \, 255) \, of.random(0
\, 255) \, 255) \; of.drawRectangle(of.random(-wh \, wh) \, of.random(-wh
\, wh) \, of.random(10 \, 20) \, of.random(10 \, 20)) \; end \;, f
101;
#X obj 61 435 poflua truc1_\$0 \; M.count=500 \; M.loops=0 \; function
M.draw() \; for i=0 \, M.count do \; draw1.dodraw() \; M.loops = M.loops
+ 1 \; end \; M.out("loops" \, M.loops) \; end \; function M:touch(event
\, x \, y \, id) \; M.out("touch" \, event \, x \, y \, id) \; end
\;;
#N canvas 793 196 1018 813 test_slider_class4 1;
#X msg 515 75 lua M.border=\$1;
#X floatatom 515 42 5 0 0 0 - - -;
#X obj 63 260 pofhead;
#X obj 35 331 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 63 329 t a a, f 15;
#X floatatom 207 499 5 0 0 0 - - -;
#X msg 227 251 lua M.v=\$1;
#X obj 217 199 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 55 172 hsl 128 15 10 200 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X msg 124 228 lua M.w=\$1;
#X obj 316 65 pofvisible;
#X obj 324 39 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 63 401 poftranslate;
#X floatatom 179 398 5 0 0 0 - - -;
#X obj 599 280 declare -path lua;
#X obj 63 361 pofvisible 1;
#X msg 539 367 reload;
#X obj 61 532 pofrect 100 100;
#X obj 61 504 pofcolor 1 1 1 0.4;
#X obj 180 642 poftouch;
#X obj 517 426 poflua sliderV4 -r vertSlider.lua \; M.border = 30 \;
M.rad = 5 \; M.knobW = 20;
#X obj 63 295 pofonce;
#X msg 202 54 force;
#X obj 203 80 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 203 100 continuousForce \$1;
#X msg 207 445 lua M:drawonce("continuousForce" \, false);
#X obj 27 270 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 61 439 poflua slider4 \; sliderV4.format(M) \; M.w=80;
#X msg 236 411 lua M:drawonce("do");
#X connect 0 0 20 0;
#X connect 1 0 0 0;
#X connect 2 0 21 0;
#X connect 3 0 15 0;
#X connect 4 0 15 0;
#X connect 4 1 20 0;
#X connect 6 0 27 0;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 9 0 27 0;
#X connect 11 0 10 0;
#X connect 12 0 27 0;
#X connect 13 0 12 1;
#X connect 15 0 12 0;
#X connect 16 0 20 0;
#X connect 18 0 17 0;
#X connect 21 0 4 0;
#X connect 22 0 21 0;
#X connect 23 0 24 0;
#X connect 24 0 21 0;
#X connect 25 0 27 0;
#X connect 26 0 21 0;
#X connect 27 1 5 0;
#X connect 28 0 27 0;
#X restore 81 809 pd test_slider_class4;
#X obj 229 227 t a a a, f 23;
#X connect 0 0 57 0;
#X connect 1 0 33 0;
#X connect 2 0 1 1;
#X connect 4 0 3 0;
#X connect 5 0 33 0;
#X connect 6 0 1 2;
#X connect 8 0 13 0;
#X connect 9 0 15 0;
#X connect 10 0 11 0;
#X connect 11 0 8 0;
#X connect 11 1 8 1;
#X connect 11 1 31 0;
#X connect 12 0 7 0;
#X connect 13 0 12 0;
#X connect 15 0 10 0;
#X connect 17 0 16 0;
#X connect 18 0 16 0;
#X connect 19 0 45 0;
#X connect 20 0 34 1;
#X connect 20 0 34 2;
#X connect 21 0 22 0;
#X connect 22 1 23 0;
#X connect 23 0 35 0;
#X connect 23 1 35 1;
#X connect 24 0 25 0;
#X connect 25 0 29 0;
#X connect 26 0 16 0;
#X connect 27 0 30 0;
#X connect 27 0 31 1;
#X connect 29 0 27 0;
#X connect 30 0 27 1;
#X connect 31 0 28 0;
#X connect 34 0 45 0;
#X connect 35 0 24 0;
#X connect 37 0 38 0;
#X connect 38 0 36 0;
#X connect 40 0 41 0;
#X connect 41 0 39 0;
#X connect 43 0 55 0;
#X connect 44 0 43 0;
#X connect 45 0 55 0;
#X connect 46 0 42 0;
#X connect 46 1 47 0;
#X connect 55 1 46 0;
#X connect 57 0 1 0;
#X connect 57 0 34 0;
#X connect 57 1 54 0;
#X connect 57 2 36 0;
